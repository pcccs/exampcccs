Construct an Android app that toggles a light bulb on and off when the user clicks on toggle button



Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context=".MainActivity">
<ToggleButton
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/toggle"
android:textOff="power off"
android:textOn="power on"
android:drawableStart="@drawable/selector"
android:layout_marginTop="40dp"/>
<ImageView
android:layout_width="match_parent"
android:layout_height="match_parent"
android:id="@+id/imageView"
android:layout_marginTop="20dp"/>
</LinearLayout>
Selector.xml
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
<item android:state_checked="true" android:drawable="@drawable/img_1"/>
<item android:state_checked="false" android:drawable="@drawable/img"/>
</selector>
MainActivity.java
package com.example.mybulb;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.ToggleButton;
public class MainActivity extends AppCompatActivity {
ToggleButton toggleButton;
ImageView imageView;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
toggleButton=findViewById(R.id.toggle);
imageView=findViewById(R.id.imageView);
imageView.setImageDrawable(getResources().getDrawable(R.drawable.img));
toggleButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
if (toggleButton.isChecked()) {
imageView.setImageDrawable(getResources().getDrawable(R.drawable.img));
}
else {
imageView.setImageDrawable(getResources().getDrawable(R.drawable.img_1));
}
}
});
}
}





B) Construct an Android application to accept a number and calculate Armstrong and Perfect number of a given number using Menu.



Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
android:gravity="center"
tools:context=".MainActivity">
<EditText
android:layout_marginTop="200dp"
android:layout_marginLeft="50dp"
android:layout_width="200dp"
android:layout_height="50dp"
android:id="@+id/et"
android:hint="Enter a number"/>
</LinearLayout>
MainActivity.java
package com.example.myarmstrongperfect;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
int num;
String value;
EditText et;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
}
@Override
public boolean onCreateOptionsMenu(Menu menu) {
//return super.onCreateOptionsMenu(menu);
MenuInflater mi = getMenuInflater();
mi.inflate(R.menu.mymenu, menu);
return true;
}
@Override
public boolean onOptionsItemSelected(@NonNull MenuItem item) {
//return super.onOptionsItemSelected(item);
et=(EditText) findViewById(R.id.et);
value= et.getText().toString();
if(!value.isEmpty()){
try{
num = Integer.parseInt(value);
int id;
id= item.getItemId();
int t=num;
switch(id){
case R.id.perfect:int ans=0;
int div=1;
while(div<t){
if (t%div==0)
ans=ans + div;
div++;
}
if(ans==num)
Toast.makeText(getApplicationContext(), "Number "+ num+ " is
perfect", Toast.LENGTH_SHORT).show();
else
Toast.makeText(getApplicationContext(), "Number "+ num+ " is
not perfect", Toast.LENGTH_SHORT).show();
break;
case R.id.arms:ans=0;
while(t>0){
int rem = t%10;
ans += Math.pow(rem, 3);
t=t/10;
}
if(ans==num)
Toast.makeText(this, "Number "+ num + " is an armstrong
number", Toast.LENGTH_SHORT).show();
else
Toast.makeText(this, "Number "+ num + " is not an armstrong
number", Toast.LENGTH_SHORT).show();
break;
}
}
catch (NumberFormatException ne){
Log.e("Error", ""+ne.getMessage());
}
}
return true;
}
}
Mymenu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
<item android:id="@+id/perfect"
android:title="Perfect" />
<item android:id="@+id/arms"
android:title="Armstrong" />
</menu>